{"ast":null,"code":"import _classCallCheck from\"/home/monge/amomentintime/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/monge/amomentintime/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/monge/amomentintime/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/monge/amomentintime/client/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/monge/amomentintime/client/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{forceNumber}from'./utils';/**\n * This is an <input type=range> that steps up and down on click\n * instead of jumping immediately to the new value.\n *\n * Based on zcorpan's solution here:\n *   https://stackoverflow.com/a/51988783/173630\n */import{jsx as _jsx}from\"react/jsx-runtime\";var RangeStepInput=/*#__PURE__*/function(_React$Component){_inherits(RangeStepInput,_React$Component);var _super=_createSuper(RangeStepInput);function RangeStepInput(props){var _this;_classCallCheck(this,RangeStepInput);_this=_super.call(this,props);_this.state={isMouseDown:false,isDragging:false};_this.onInput=_this.onInput.bind(_assertThisInitialized(_this));_this.onMouseDown=_this.onMouseDown.bind(_assertThisInitialized(_this));_this.onMouseUp=_this.onMouseUp.bind(_assertThisInitialized(_this));_this.onMouseMove=_this.onMouseMove.bind(_assertThisInitialized(_this));_this.domRef=/*#__PURE__*/React.createRef();return _this;}_createClass(RangeStepInput,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"input\",{type:\"range\"//                 ref={this.domRef}\n,ref:this.props.id,className:this.props.className,min:this.props.min,max:this.props.max,step:this.props.step,value:this.props.value,name:this.props.name,id:this.props.id,style:this.props.style,disabled:this.props.disabled,onChange:this.props.onChange,onMouseDown:this.onMouseDown,onMouseUp:this.onMouseUp,onMouseMove:this.onMouseMove,onClick:this.onClick,onInput:this.onInput});}},{key:\"onMouseDown\",value:function onMouseDown(){this.setState({isMouseDown:true});if(this.props.hold){if(this.holdLoop){clearInterval(this.holdLoop);}var oldVal=this.props.value;var self=this;setTimeout(function(){if(self.holdLoop){clearInterval(self.holdLoop);}self.holdLoop=self.makeHoldLoop(oldVal);// Add some initial delay on the click-hold functionality.\n},250);}}},{key:\"onMouseUp\",value:function onMouseUp(){this.setState({isMouseDown:false,isDragging:false});if(this.holdLoop){clearInterval(this.holdLoop);}}},{key:\"onMouseMove\",value:function onMouseMove(){if(this.state.isMouseDown){this.setState({isDragging:true});}}},{key:\"onInput\",value:function onInput(e){var step=this.props.step;var newVal=forceNumber(e.target.value);var oldVal=this.props.value;if(// Disable the oninput filter with the user is dragging\n// the slider's knob.\n!(this.state.isMouseDown&&this.state.isDragging)&&oldVal){e.target.value=newVal>oldVal?oldVal+step:oldVal-step;}}},{key:\"makeHoldLoop\",value:function makeHoldLoop(oldVal){var self=this;return setInterval(function(){if(!self.state.isMouseDown||self.state.isDragging){// The user isn't holding the cursor anymore, or the cursor\n// is being dragged. Clean up and cancel.\nif(self.holdLoop){clearInterval(self.holdLoop);}return false;}var input=self.domRef.current;var newVal=self.props.value;if(oldVal>newVal&&newVal-self.props.step>=self.props.min){newVal-=self.props.step;}else if(oldVal<newVal&&newVal+self.props.step<=self.props.max){newVal+=self.props.step;}if(oldVal===newVal){return false;}// Directly setting input.value will cause the new value\n// to not be recognized, because of React.\n// https://stackoverflow.com/a/46012210/173630\nvar nativeInputValueSetter=Object.getOwnPropertyDescriptor(window.HTMLInputElement.prototype,'value').set;nativeInputValueSetter.call(input,newVal);// Trigger an onChange event.\nvar e=new Event('change',{bubbles:true});return input.dispatchEvent(e);},100);}}]);return RangeStepInput;}(React.Component);export{RangeStepInput as default};;RangeStepInput.defaultProps={hold:true};","map":{"version":3,"sources":["/home/monge/amomentintime/client/src/RangeStepInput.js"],"names":["React","forceNumber","RangeStepInput","props","state","isMouseDown","isDragging","onInput","bind","onMouseDown","onMouseUp","onMouseMove","domRef","createRef","id","className","min","max","step","value","name","style","disabled","onChange","onClick","setState","hold","holdLoop","clearInterval","oldVal","self","setTimeout","makeHoldLoop","e","newVal","target","setInterval","input","current","nativeInputValueSetter","Object","getOwnPropertyDescriptor","window","HTMLInputElement","prototype","set","call","Event","bubbles","dispatchEvent","Component","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {forceNumber} from './utils';\n\n/**\n * This is an <input type=range> that steps up and down on click\n * instead of jumping immediately to the new value.\n *\n * Based on zcorpan's solution here:\n *   https://stackoverflow.com/a/51988783/173630\n */\nexport default class RangeStepInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isMouseDown: false,\n            isDragging: false\n        };\n        this.onInput = this.onInput.bind(this);\n        this.onMouseDown = this.onMouseDown.bind(this);\n        this.onMouseUp = this.onMouseUp.bind(this);\n        this.onMouseMove = this.onMouseMove.bind(this);\n\n        this.domRef = React.createRef();\n    }\n    render() {\n        return <input\n                   type=\"range\"\n//                 ref={this.domRef}\n                   ref={this.props.id}\n                   className={this.props.className}\n                   min={this.props.min}\n                   max={this.props.max}\n                   step={this.props.step}\n                   value={this.props.value}\n                   name={this.props.name}\n                   id={this.props.id}\n                   style={this.props.style}\n                   disabled={this.props.disabled}\n                   onChange={this.props.onChange}\n                   onMouseDown={this.onMouseDown}\n                   onMouseUp={this.onMouseUp}\n                   onMouseMove={this.onMouseMove}\n                   onClick={this.onClick}\n                   onInput={this.onInput} />;\n    }\n    onMouseDown() {\n        this.setState({isMouseDown: true});\n\n        if (this.props.hold) {\n            if (this.holdLoop) {\n                clearInterval(this.holdLoop);\n            }\n\n            let oldVal = this.props.value;\n\n            const self = this;\n            setTimeout(function() {\n                if (self.holdLoop) {\n                    clearInterval(self.holdLoop);\n                }\n                self.holdLoop = self.makeHoldLoop(oldVal);\n            // Add some initial delay on the click-hold functionality.\n            }, 250);\n        }\n    }\n    onMouseUp() {\n        this.setState({\n            isMouseDown: false,\n            isDragging: false\n        });\n\n        if (this.holdLoop) {\n            clearInterval(this.holdLoop);\n        }\n    }\n    onMouseMove() {\n        if (this.state.isMouseDown) {\n            this.setState({isDragging: true});\n        }\n    }\n    onInput(e) {\n        const step = this.props.step;\n        const newVal = forceNumber(e.target.value);\n        const oldVal = this.props.value;\n\n        if (\n            // Disable the oninput filter with the user is dragging\n            // the slider's knob.\n            !(this.state.isMouseDown && this.state.isDragging) &&\n            oldVal\n        ) {\n            e.target.value = (newVal > oldVal) ?\n                             oldVal + step : oldVal - step;\n        }\n    }\n    makeHoldLoop(oldVal) {\n        const self = this;\n\n        return setInterval(function() {\n            if (!self.state.isMouseDown || self.state.isDragging) {\n                // The user isn't holding the cursor anymore, or the cursor\n                // is being dragged. Clean up and cancel.\n                if (self.holdLoop) {\n                    clearInterval(self.holdLoop);\n                }\n                return false;\n            }\n\n            const input = self.domRef.current;\n            let newVal = self.props.value;\n\n            if (\n                oldVal > newVal &&\n                (newVal - self.props.step) >= self.props.min\n            ) {\n                newVal -= self.props.step;\n            } else if (\n                oldVal < newVal &&\n                (newVal + self.props.step) <= self.props.max\n            ) {\n                newVal += self.props.step;\n            }\n\n            if (oldVal === newVal) {\n                return false;\n            }\n\n            // Directly setting input.value will cause the new value\n            // to not be recognized, because of React.\n            // https://stackoverflow.com/a/46012210/173630\n            const nativeInputValueSetter = Object.getOwnPropertyDescriptor(\n                window.HTMLInputElement.prototype, 'value').set;\n            nativeInputValueSetter.call(input, newVal);\n\n            // Trigger an onChange event.\n            const e = new Event('change', {bubbles: true});\n\n            return input.dispatchEvent(e);\n        }, 100);\n    }\n};\n\nRangeStepInput.propTypes = {\n    value: PropTypes.number.isRequired,\n    onChange: PropTypes.func.isRequired,\n    step: PropTypes.number.isRequired,\n    className: PropTypes.string,\n    min: PropTypes.number,\n    max: PropTypes.number,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    disabled: PropTypes.bool,\n    style: PropTypes.string,\n\n    // Determines whether the slider changes value when the cursor is\n    // held on it.\n    hold: PropTypes.bool\n};\n\nRangeStepInput.defaultProps = {\n    hold: true\n};\n"]},"metadata":{},"sourceType":"module"}